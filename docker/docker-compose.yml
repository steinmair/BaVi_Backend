version: '3'

services:

  traefik:
    image: traefik:latest # Use the specific version of Traefik you want
    command:
      - --api.insecure=true # Enable API (insecure mode for demo purposes)
      - --providers.docker=true # Enable Docker provider
      - --entrypoints.web.address=:80 # Define the entry point
    ports:
      - 80:80 # Expose port 80 for HTTP traffic
      - 8080:8080 # Expose port 8080 for Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Mount Docker socket to communicate with Docker API
    networks:
      - frontnet
      - backnet # Add Traefik to the same networks as your services
    restart: always

  backend:
    image: maven:3.9.6-amazoncorretto-21
    container_name: bavi_server
    entrypoint: sh -c "cd /app  && mvn clean package spring-boot:repackage && java -jar /app/target/bavi-1.0.0.jar"
    volumes:
      - ../:/app
    depends_on:
      - mysql
      - minio
    restart: always
    networks:
      - backnet
      - frontnet
    expose:
      - 8082
    labels:
      - traefik.enable=true
      - traefik.http.routers.bavi_server.rule=PathPrefix(`/`) # Route all requests to this service
      - traefik.http.services.bavi_server.loadbalancer.server.port=8082


  minio:
    image: minio/minio:latest
    container_name: minio_server
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: rootroot
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data
    restart: always
    networks:
      - backnet
    expose:
      - 9000

  mysql:
    image: mysql:latest
    container_name: mysql_server
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: BAVI
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./mysql:/var/lib/mysql
    restart: always
    networks:
      - backnet
    expose:
      - 3306

volumes:
  minio_data:
    driver: local

networks:
  backnet:
  frontnet: